{
	"info": {
		"_postman_id": "7ea51ce8-6025-4153-8201-c11226bcf4a5",
		"name": "Books_management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17316430"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test\",\r\n    \"username\": \"test\",\r\n    \"password\": \"test\",\r\n    \"email\": \"test@darq.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body contains the correct message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User has been logged out!\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response headers contain the 'Content-Type' header\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response does not contain sensitive information\", function () {\r",
									"    const responseData = pm.response.text();\r",
									"    \r",
									"    pm.expect(responseData).to.not.include(\"password\");\r",
									"    pm.expect(responseData).to.not.include(\"token\");\r",
									"    pm.expect(responseData).to.not.include(\"credit_card\");\r",
									"    pm.expect(responseData).to.not.include(\"ssn\");\r",
									"});\r",
									"\r",
									"var template = `\r",
									"<div style=\"text-align:center\">\r",
									"    <h1>{{response}}</h1>\r",
									"</div>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.text() }\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Get All Books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/books",
							"host": [
								"{{URL}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get book by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/books/654ca4f2dcc44e936449f7e0",
							"host": [
								"{{URL}}"
							],
							"path": [
								"books",
								"654ca4f2dcc44e936449f7e0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/books/654ccdd6980fbb20956d3a47",
							"host": [
								"{{URL}}"
							],
							"path": [
								"books",
								"654ccdd6980fbb20956d3a47"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"updated title\",\r\n    \"summary\": \"Updated summary\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/books/654ccdd6980fbb20956d3a47",
							"host": [
								"{{URL}}"
							],
							"path": [
								"books",
								"654ccdd6980fbb20956d3a47"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"another new book\",\r\n    \"summary\": \"This is the best summary for our new book.\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/books",
							"host": [
								"{{URL}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}